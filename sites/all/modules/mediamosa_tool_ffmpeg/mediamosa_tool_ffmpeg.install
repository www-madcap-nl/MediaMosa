<?php
// $Id$

/**
 * MediaMosa is Open Source Software to build a Full Featured, Webservice
 * Oriented Media Management and Distribution platform (http://mediamosa.org)
 *
 * Copyright (C) 2010 SURFnet BV (http://www.surfnet.nl) and Kennisnet
 * (http://www.kennisnet.nl)
 *
 * MediaMosa is based on the open source Drupal platform and
 * was originally developed by Madcap BV (http://www.madcap.nl)
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, you can find it at:
 * http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
 */

 /**
  * @file
  * FFmpeg tool installer.
  */

/**
 * Implements hook_install().
 */
function mediamosa_tool_ffmpeg_install() {
  $a_default_params = array(
    array('ffmpeg', 'videobitrate', '-b', 128000, 8000000, NULL, '200000', 'FALSE'),
    array('ffmpeg', 'fps', '-r', 10, 30, NULL, '25', 'FALSE'),
    array('ffmpeg', 'size', '-s', NULL, NULL, array('128x96','176x144','352x288','704x576','160x120','320x240','640x480','800x600','1024x768','1600x1200','2048x1536','1280x1024','2560x2048','5120x4096','852x480','1366x768','1600x1024','1920x1200','2560x1600','3200x2048','3840x2400','6400x4096','7680x4800','320x200','640x350','852x480','1280x720','1920x1080','480x270','480x360'), '320x240', 'FALSE'),
    array('ffmpeg', 'internal_file_extension', '', NULL, NULL, array('flv','wmv','mp4','avi','ogg','webm'), NULL, 'FALSE'),
    array('ffmpeg', 'qmax', '-qmax', 1, 31, NULL, NULL, 'FALSE'),
    array('ffmpeg', 'audiocodec', '-acodec', NULL, NULL, array('libmp3lame','wma','pcm_s16le','libfaac','libvorbis'), NULL, 'FALSE'),
    array('ffmpeg', 'audiobitrate', '-ab', NULL, NULL, array('40000','64000','128000','192000','256000','512000'), '64000', 'FALSE'),
    array('ffmpeg', 'audiosamplingrate', '-ar', NULL, NULL, array('22050','44100'), '44100', 'FALSE'),
    array('ffmpeg', 'audiochannels', '-ac', 0, 2, NULL, '1', 'FALSE'),
    array('ffmpeg', 'duration', '-t', 0, NULL, NULL, NULL, 'FALSE'),
    array('ffmpeg', 'startposition', '-ss', 0, NULL, NULL, NULL, 'FALSE'),
    array('ffmpeg', 'internal_previous_job', '', NULL, NULL, NULL, NULL, 'FALSE'),
    array('ffmpeg', 'maintain_aspect_ratio', '', NULL, NULL, array('yes','no'), 'yes', 'FALSE'),
    array('ffmpeg', '2_pass_h264_encoding', '-pass', NULL, NULL, array('','1','2'), NULL, 'FALSE'),
    array('ffmpeg', 'videocodec', '-vcodec', NULL, NULL, array('flv','wmv','mpeg4','libx264','rawvideo','libtheora','webm'), NULL, 'FALSE'),
    array('ffmpeg', 'videopreset', '-vpre', NULL, NULL, array('','hq','default','ipod320','max'), NULL, 'FALSE'),
    array('ffmpeg', 'padding', '', NULL, NULL, array('yes','no'), 'yes', 'FALSE'),
  );

  // Insert default mappings as nodes.
  foreach ($a_default_params as $a_default_param) {
    $node = mediamosa_node::create_basic_node(mediamosa_node::MEDIAMOSA_NODE_TYPE_TOOL_PARAMS, $a_default_param[1]);

    $node->{mediamosa_tool_params_db::TOOL} = $a_default_param[0];
    $node->{mediamosa_tool_params_db::NICE_PARAMETER} = $a_default_param[1];
    $node->{mediamosa_tool_params_db::TOOL_PARAMETER} = $a_default_param[2];
    $node->{mediamosa_tool_params_db::MIN_VALUE} = $a_default_param[3];
    $node->{mediamosa_tool_params_db::MAX_VALUE} = $a_default_param[4];
    $node->{mediamosa_tool_params_db::ALLOWED_VALUE} = $a_default_param[5];
    $node->{mediamosa_tool_params_db::DEFAULT_VALUE} = $a_default_param[6];
    $node->{mediamosa_tool_params_db::REQUIRED} = $a_default_param[7];

    $node = node_save($node);
  }
}

/**
 * Implements hook_unstall().
 */
function mediamosa_tool_ffmpeg_uninstall() {
  // Do nothing. We don't delete the existing data.
}
