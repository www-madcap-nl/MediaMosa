<?php
// $Id$

/**
 * MediaMosa is Open Source Software to build a Full Featured, Webservice
 * Oriented Media Management and Distribution platform (http://mediamosa.org)
 *
 * Copyright (C) 2011 SURFnet BV (http://www.surfnet.nl) and Kennisnet
 * (http://www.kennisnet.nl)
 *
 * MediaMosa is based on the open source Drupal platform and
 * was originally developed by Madcap BV (http://www.madcap.nl)
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, you can find it at:
 * http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
 */

 /**
  * @file
  * PDF tool installer.
  */

/**
 * Implements hook_install().
 */
function mediamosa_tool_pdf_install() {
  // Tool params.

  $a_default_params = array(
    array('pdf', 'Default viewer', '-b', NULL, NULL, array('', ''), '', 'FALSE', t('Therefore the swf file will be "browseable", i.e. display some buttons for turning pages. The viewer swf to be used is determine')),
    array('pdf', 'Fonts', '-f', NULL, NULL, array('', ''), '', 'FALSE', t("Store full fonts in SWF. (Don't reduce to used characters).")),
    array('pdf', 'Flash version', '-T', 8, 9, array(8, 9), 9, 'TRUE', t('Set Flash Version in the SWF header to num.')),
  );

  // Insert default mappings as nodes.
  foreach ($a_default_params as $a_default_param) {
    $node = mediamosa_node::create_basic_node(mediamosa_node::MEDIAMOSA_NODE_TYPE_TOOL_PARAMS, $a_default_param[1]);

    $node->{mediamosa_tool_params_db::TOOL} = $a_default_param[0];
    $node->{mediamosa_tool_params_db::NICE_PARAMETER} = $a_default_param[1];
    $node->{mediamosa_tool_params_db::TOOL_PARAMETER} = $a_default_param[2];
    $node->{mediamosa_tool_params_db::MIN_VALUE} = $a_default_param[3];
    $node->{mediamosa_tool_params_db::MAX_VALUE} = $a_default_param[4];
    $node->{mediamosa_tool_params_db::ALLOWED_VALUE} = $a_default_param[5];
    $node->{mediamosa_tool_params_db::DEFAULT_VALUE} = $a_default_param[6];
    $node->{mediamosa_tool_params_db::REQUIRED} = $a_default_param[7];
    $node->{mediamosa_tool_params_db::DESCRIPTION} = $a_default_param[8];

    $node = node_save($node);
  }

  // Tool mapping.

  $mapping_array = array(
    array('title',                      'title', 1),
    array('subject',                    '', 0),
    array('keywords',                   '', 0),
    array('author',                     '', 0),
    array('creator',                    'creator', 1),
    array('producer',                   '', 0),
    array('creationdate',               'created', 2),
    array('creation date',              '', 0),
    array('moddate',                    '', 0),
    array('modificationdate',           '', 0),
    array('modification date',          '', 0),
    array('tagged',                     '', 0),
    array('pages',                      '', 0),
    array('encrypted',                  '', 0),
    array('print and copy permissions', '', 0),
    array('page size',                  '', 0),
    array('file size',                  '', 0),
    array('optimized',                  '', 0),
    array('linearized',                 '', 0),
    array('pdf version',                '', 0),
    array('metadata',                   '', 0),
  );

  // Insert default mappings as nodes.
  foreach ($mapping_array as $mapping) {
    if ($mapping[1] && $mapping[2] && is_numeric($mapping[2]) && $mapping[2] > 0) {
      $prop = mediamosa_asset_metadata_property::property_get_row_with_name($mapping[1], $mapping[2]);
      if ($prop) {
        $prop_id = $prop[mediamosa_asset_metadata_property_db::ID];

        $node = mediamosa_node::create_basic_node(mediamosa_node::MEDIAMOSA_NODE_TYPE_TOOL_MAPPING, $mapping[0]);

        $node->{mediamosa_tool_mapping_db::TOOL} = MEDIAMOSA_TOOL_PDF_ID;
        $node->{mediamosa_tool_mapping_db::PARAMETER} = $mapping[0];
        $node->{mediamosa_tool_mapping_db::PROP_ID} = $prop_id;

        $node = node_save($node);
      }
    }
  }
}

/**
 * Implements hook_unstall().
 */
function mediamosa_tool_pdf_uninstall() {
  $query = mediamosa_db::db_select(mediamosa_tool_mapping_db::TABLE_NAME, 'tm');
  $query
    ->condition('tm.' . mediamosa_tool_mapping_db::TOOL, MEDIAMOSA_TOOL_PDF_ID)
    ->fields('tm', array(mediamosa_tool_mapping_db::NID));
  $result = $query->execute();

  // Uninstall nodes from tool mapping.
  foreach ($result as $record) {
    node_delete($record['nid']);
  }
}
