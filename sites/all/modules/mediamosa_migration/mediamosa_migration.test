<?php
// $Id$

/**
 * MediaMosa is a Full Featured, Webservice Oriented Media Management and
 * Distribution platform (http://www.vpcore.nl)
 *
 * Copyright (C) 2009 SURFnet BV (http://www.surfnet.nl) and Kennisnet
 * (http://www.kennisnet.nl)
 *
 * MediaMosa is based on the open source Drupal platform and
 * was originally developed by Madcap BV (http://www.madcap.nl)
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, you can find it at:
 * http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
 */

/**
 * @file
 * Unittests the migration from 1.x to 2.x
 */
class MediaMosaMigrationTestCase extends MediaMosaTestCase {

  public static function getInfo() {
    return array(
      'name' => 'Migrated REST calls ping',
      'description' => 'Check if all 1.7.x REST calls are present in 2.x.',
      'group' => MEDIAMOSA_TEST_GROUP_MEDIAMOSA_MIGRATION,
    );
  }

  function setUp() {
    parent::setUp('mediamosa_app_authentication', 'mediamosa');

    // Create and login user
    $rest_user = $this->drupalCreateUser(array(MEDIAMOSA_PERM_REST_ACCESS));
    $this->drupalLogin($rest_user);
  }

  function testPingRestcalls() {
    $app = $this->createApp();

    $uri_replace = array(
      '$asset_id' => 1,
      '$mediafile_id' => 1,
      '$supplement_id' => 1,
      '$batch_id' => 1,
      '$still_id' => 1,
      '$coll_id' => 1,
      '$job_id' => 1,
      '$group_id' => 1,
      '$fav_user_id' => 1,
      '$profile_id' => 1,
      '$user' => $this->randomName(),
      '$groupname' => $this->randomName(),
    );

    $result = db_query("SELECT * FROM memo.madrest AS m WHERE NOT URI LIKE 'internal/%' ORDER BY m.uri");
    foreach ($result as $restcall) {
      $uri = str_replace(array_keys($uri_replace), array_values($uri_replace), $restcall->uri);
      $response = $this->restCall($app, $uri, $restcall->method);
    }
  }
}
