<?php
// $Id$

/**
 * MediaMosa is a Full Featured, Webservice Oriented Media Management and
 * Distribution platform (http://www.vpcore.nl)
 *
 * Copyright (C) 2010 SURFnet BV (http://www.surfnet.nl) and Kennisnet
 * (http://www.kennisnet.nl)
 *
 * MediaMosa is based on the open source Drupal platform and
 * was originally developed by Madcap BV (http://www.madcap.nl)
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, you can find it at:
 * http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
 */

/**
 * @file
 * The MediaMosa Solr extension module.
 */

// Include my non-hooks.
module_load_include('inc', 'mediamosa_solr', 'mediamosa_solr');


/**
 * Implement hook_menu().
 */
function mediamosa_solr_menu() {
  $items = array();

  $items['admin/config/development/mediamosa/solr'] = array(
    'title' => 'MediaMosa Solr',
    'description' => 'Lucene Solr allows you to use really fast META data searching for MediaMosa, a lot faster than the default search used on your database.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mediamosa_solr_settings'),
    'access arguments' => array('administer mediamosa solr settings'),
  );

  $items['admin/config/development/mediamosa/solr/list'] = array(
    'title' => 'MediaMosa Connector',
    'access arguments' => array('administer mediamosa solr settings'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  // Include in the mediamosa menus too.
  if (module_exists('mediamosa_maintenance')) {
    $items['admin/mediamosa/config/solr'] = $items['admin/config/development/mediamosa/solr'];
    $items['admin/mediamosa/config/solr/list'] = $items['admin/config/development/mediamosa/solr/list'];
  }

  return $items;
}

/**
 * Implement hook_permission().
 */
function mediamosa_solr_permission() {

  return array(
    'administer mediamosa solr settings' => array(
      'title' => t('MediaMosa connector configuration administer permissions'),
      'description' => t('Manage the configuration of MediaMosa Solr module to be edited.')
    ),
  );
}

/**
 * Implement hook_settings().
 */
function mediamosa_solr_settings() {

  $form = array();

  $form['connection'] = array(
    '#type' => 'fieldset',
    '#title' => t('Server connection setup for Solr'),
    '#description' => t('Supply the server URL and other connecting related settings for Solr.'),
    '#collapsible' => TRUE,
    '#weight' => -5,
  );
  $form['connection']['mediamosa_solr_url'] = array(
    '#type' => 'textfield',
    '#title' => t('URL'),
    '#description' => t('Enter the URL of the Solr server. Example; http://solr.mediamosa.local:8983/mediamosa/ (jetty servlet) or http://solr.mediamosa.local:8080/mediamosa/ (tomcat servlet).  Port and path in the URL are required, if you are using the HTTP port (80) then you must supply it in the url (http://solr.mediamosa.local:80/mediamosa/).'),
    '#required' => TRUE,
    '#default_value' => MediaMosa_Apache_Solr_Service::mediamosaGetUrl(),
  );

  if (MediaMosa_Apache_Solr_Service::mediamosaGetUrl() != '') {
    $form['connection']['check_connection'] = array(
      '#type' => 'submit',
      '#value' => t('Check connection Solr'),
      '#submit' => array('_mediamosa_solr_ping_submit'),
      '#weight' => 1,
    );
    $form['connection']['check_connection_save'] = array(
      '#type' => 'checkbox',
      '#title' => t('Save URL when connection test was successful.'),
      '#default_value' => TRUE,
      '#weight' => 2,
    );
  }

  $form['#submit'] = array('mediamosa_solr_settings_submit');
  $form = system_settings_form($form);

  return $form;
}

/**
 * Implement hook_settings_submit().
 */
function mediamosa_solr_settings_submit(&$form_state, $form) {
  // Call the function we normally call when pressing the 'check connection
  // Solr' button.
  _mediamosa_solr_ping_submit($form_state, $form);
}

/**
 * Implements hook_mediamosa_status_generate().
 */
function mediamosa_solr_mediamosa_status_generate() {

  // Make sure this module is enabled.
  if (!module_exists('mediamosa_maintenance_status')) {
    return array();
  }

  $results['ping'] = array(
    'title' => t('Lucene Solr Search'),
    'value' => t('Ping was successful'),
    'severity' => _mediamosa_maintenance_status_okerror(MediaMosa_Apache_Solr_Service::mediamosaPing()),
  );

  return $results;
}
