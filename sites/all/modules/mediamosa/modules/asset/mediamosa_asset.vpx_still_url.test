<?php
// $Id$

/**
 * MediaMosa is Open Source Software to build a Full Featured, Webservice
 * Oriented Media Management and Distribution platform (http://mediamosa.org)
 *
 * Copyright (C) 2010 SURFnet BV (http://www.surfnet.nl) and Kennisnet
 * (http://www.kennisnet.nl)
 *
 * MediaMosa is based on the open source Drupal platform and
 * was originally developed by Madcap BV (http://www.madcap.nl)
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, you can find it at:
 * http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
 */

 /**
  * @file
  * Vpx_still_url test file.
  */
class MediaMosaAssetVpxStillUrlTestCaseEga extends MediaMosaTestCaseEgaJob {

  // ------------------------------------------------------------------ Members.

  // ------------------------------------------------------------------ Functions.
  public static function getInfo() {
    return array(
      'name' => 'Vpx still url',
      'description' => 'Testing asset vpx_still_url functions.',
      'group' => MEDIAMOSA_TEST_GROUP_MEDIAMOSA_CORE_ASSET,
    );
  }

  // ------------------------------------------------------------------ Tests.
  // Test Asset vpx_still_url (114).
  public function testAssetVpxStillUrl() {

    // Create an asset.
    $asset_id = $this->createAsset();

    // Create mediafiles.
    $mediafile_id_1 = $this->createMediafile($asset_id);
    $mediafile_id_2 = $this->createMediafile($asset_id);

    // Get the asset.
    $a_asset = $this->getAsset($asset_id);
    //$this->var_export($a_asset);

    // Check the result.
    $this->assertFalse(
      isset($a_asset['vpx_still_url']) && $a_asset['vpx_still_url'],
      t('There is not vpx_still_url')
    );

    // Create a still.

    // Create upload file.
    $this->uploadTestFileForMediafile($asset_id, $mediafile_id_1);

    // Create still job.
    $job_id = $this->createMediafileStill($mediafile_id_1);

    // Parse the queue.
    $this->doQueueCycleAll();


    // Get the asset.
    $a_asset = $this->getAsset($asset_id);
    //$this->var_export($a_asset);

    // Check the result.
    $this->assertTrue(
      isset($a_asset['vpx_still_url']) && $a_asset['vpx_still_url'],
      t('There is vpx_still_url')
    );

  }
}
