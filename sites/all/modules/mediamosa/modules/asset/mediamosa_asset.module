<?php
// $Id$

/**
 * MediaMosa is Open Source Software to build a Full Featured, Webservice
 * Oriented Media Management and Distribution platform (http://mediamosa.org)
 *
 * Copyright (C) 2009 SURFnet BV (http://www.surfnet.nl) and Kennisnet
 * (http://www.kennisnet.nl)
 *
 * MediaMosa is based on the open source Drupal platform and
 * was originally developed by Madcap BV (http://www.madcap.nl)
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, you can find it at:
 * http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
 */

 /**
  * @file
  *
  */

 /*
  * Implements hook_cron.
  */
function mediamosa_asset_cron() {
  $start = time();
  mediamosa_debug::log_debug('mediamosa_asset_cron started.', array(), 'asset_cron');

  $run_last = variable_get('mediamosa_asset_cron_last', NULL);

  // may run?
  if (round(REQUEST_TIME - $run_last) >= mediamosa_settings::ASSET_GARBAGE_COLLECTOR_CRON_INTERVAL) {
    // For the next time...
    variable_set('mediamosa_asset_cron_last', REQUEST_TIME);

    // Do garbage cleanup.
    mediamosa_asset::do_garbage_cleanup();
  }

  // Log it.
  mediamosa_debug::log_debug('mediamosa_asset_cron ended: @secs', array('@sec' => time() - $start), 'asset_cron');
}

/**
 * Implements hook_mediamosa_register_rest_call().
 */
function mediamosa_asset_mediamosa_register_rest_call() {
  $rest_calls = array();

  // Asset search.
  $rest_calls['asset'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_asset_search',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
    // Set default so we dont fail when we are called for vars.
    mediamosa_rest_call::DEFAULT_PARAMS_VALUES => array(mediamosa_rest_call_asset_search::APP_ID => array(0)),
  );

  // Collection asset search.
  $rest_calls['collection/$coll_id/asset'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_asset_search',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
    // Set default so we dont fail when we are called for vars.
    mediamosa_rest_call::DEFAULT_PARAMS_VALUES => array(mediamosa_rest_call_asset_search::APP_ID => array(0)),
  );

  // Change owner ship/group on asset/mediafile/collections.
  $rest_calls['change_ownership'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_change_ownership',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
  );

  // Count number of asset based on owner/app/group.
  $rest_calls['asset/count'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_count_asset',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
  );

  // Get Asset Media Metadata.
  $rest_calls['metadata_tag'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_asset_metadata_property_list',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_metadata_property',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_4_0,
  );

  // Create Asset Media Metadata.
  $rest_calls['metadata_tag/create'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_asset_metadata_property_create',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_metadata_property',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
  );

  // Delete Asset Media Metadata.
  $rest_calls['metadata_tag/delete'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_asset_metadata_property_delete',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_metadata_property',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
  );

  // Count number of mediafiles based on owner/app/group.
  $rest_calls['mediafile/count'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_count_asset_mediafile',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_mediafile',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
  );

  // Count number of mediafiles based on owner/app/group.
  $rest_calls['mediafile/$mediafile_id'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_get_mediafile',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_mediafile',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
  );

  // Delete from mediafile.
  $rest_calls['mediafile/$mediafile_id/delete'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_delete_mediafiles',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_mediafile',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
  );

  // Get the stills from mediafile.
  $rest_calls['mediafile/$mediafile_id/still'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_get_still_for_mediafile',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_mediafile_still',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_7_0,
  );

  // Delete stills from asset.
  $rest_calls['asset/$asset_id/still/delete'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_delete_stills',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_mediafile',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
  );

  // Set default stills from asset.
  $rest_calls['asset/$asset_id/still/default'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_set_still_default',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_mediafile',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
  );

    // Set order still from asset.
  $rest_calls['asset/$asset_id/still/order'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_set_still_order',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_mediafile',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
  );

  // Get mediafiles of asset.
  $rest_calls['asset/$asset_id/mediafile'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_get_asset_mediafiles',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
  );

  // Create mediafile.
  $rest_calls['asset/$asset_id/mediafile/create'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_create_mediafile',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_mediafile',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
  );

  // Create mediafile.
  $rest_calls['mediafile/create'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_create_mediafile',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_mediafile',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
  );

  // Update mediafile.
  $rest_calls['asset/$asset_id/mediafile/create'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_update_mediafile',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_mediafile',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
  );

  // Update mediafile.
  $rest_calls['mediafile/$mediafile_id'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_update_mediafile',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_mediafile',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
  );

  // Update mediafile.
  $rest_calls['mediafile/$mediafile_id/update'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_update_mediafile',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_mediafile',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
    mediamosa_rest_call::ACCESS => mediamosa_rest_call::ACCESS_INTERNAL_ONLY,
  );

  // Create ticket for upload.
  $rest_calls['mediafile/$mediafile_id/uploadticket/create'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_asset_mediafile_uploadticket_create',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_DEPRECATED,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_mediafile_upload',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
  );

  // Create ticket for upload.
  $rest_calls['mediafile/$mediafile_id/upload_ticket'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_asset_mediafile_uploadticket_create',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_DEPRECATED,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_mediafile_upload',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
  );

  // Create ticket for upload.
  $rest_calls['mediafile/$mediafile_id/uploadticket/create'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_asset_mediafile_uploadticket_create',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_mediafile_upload',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
  );

  // Create ticket for upload.
  $rest_calls['mediafile/$mediafile_id/upload_ticket'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_asset_mediafile_uploadticket_create',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_DEPRECATED,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_mediafile_upload',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
  );

  // Get favorites count of asset.
  $rest_calls['asset/$asset_id/favorites/count'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_asset_favorites_count',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
  );

  // Get favorites count of asset.
  $rest_calls['asset/$asset_id/count_favorites'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_asset_favorites_count',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_DEPRECATED,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
  );

  // Delete asset.
  $rest_calls['asset/$asset_id/delete'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_asset_delete',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
  );

  // Get the asset.
  $rest_calls['asset/$asset_id'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_asset_get',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
  );

  // Create the asset.
  $rest_calls['asset/create'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_asset_create',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
  );

  // Update the asset.
  $rest_calls['asset/$asset_id'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_asset_update',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
  );

  // Delete the asset.
  $rest_calls['asset/$asset_id/delete'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_asset_delete',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
  );

  // Delete all given asset.
  $rest_calls['asset/delete'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_asset_delete_all',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
  );

  // Create link between asset and collection.
  $rest_calls['collection/$coll_id/asset_relation'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_asset_collection_create',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_collection',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
  );

  // Delete all links for asset on all collections.
  $rest_calls['asset/$asset_id/collection_relation/delete'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_asset_collection_delete_asset_from_all_collections',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_collection',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_7_0,
    mediamosa_rest_call::ACCESS => mediamosa_rest_call::ACCESS_INTERNAL_ONLY,
  );

  // Count number of collections of one asset.
  $rest_calls['asset/$asset_id/collection/count'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_asset_collection_count',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_collection',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_5,
  );

  // Count number of collections of one asset.
  $rest_calls['asset/$asset_id/collections/count'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_asset_collection_count',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_collection',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
  );

  // Count number of collections of one asset.
  $rest_calls['asset/$asset_id/count_collections'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_asset_collection_count',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_DEPRECATED,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_collection',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
  );

  // Count per prop_id per content.
  $rest_calls['tagcount'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_asset_metadata_property_tagcount',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_metadata_propperty',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_7_0,
  );

  // Count per prop_id per content.
  $rest_calls['asset/$asset_id/metadata'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_asset_metadata_create',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_metadata',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
  );

  // Get the asset supplement.
  $rest_calls['asset/$asset_id/supplement'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_asset_supplement_get',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_supplement',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
  );

  // Create the asset supplement.
  $rest_calls['asset/$asset_id/supplement/create'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_asset_supplement_create',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_supplement',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
  );

  // Update the asset supplement.
  $rest_calls['asset/$asset_id/supplement/$supplement_id/update'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_asset_supplement_update',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_supplement',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
  );

  // Update the asset supplement.
  $rest_calls['supplement/$supplement_id/update'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_asset_supplement_update',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_DEPRECATED,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_supplement',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
  );

  // Update the asset supplement.
  $rest_calls['supplement/update'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_asset_supplement_update',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_DEPRECATED,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_supplement',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
  );

  // Delete the asset supplement.
  $rest_calls['asset/$asset_id/supplement/$supplement_id/delete'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_asset_supplement_delete',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_supplement',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
  );

  // Delete the asset supplement.
  $rest_calls['supplement/$supplement_id/update'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_asset_supplement_delete',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_DEPRECATED,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_supplement',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
  );

  // Delete the asset supplement.
  $rest_calls['supplement/delete'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_asset_supplement_delete',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_DEPRECATED,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_supplement',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
  );

  // Play a mediafile.
  $rest_calls['asset/$asset_id/play'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_asset_mediafile_play',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_DEPRECATED,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_mediafile_play_proxy',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
  );

  // Play a mediafile.
  $rest_calls['video/$asset_id/play'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_asset_mediafile_play',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_DEPRECATED,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_mediafile_play_proxy',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
  );

  $rest_calls['mediafile/upload'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_asset_mediafile_upload',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_mediafile_upload',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
    mediamosa_rest_call::ACCESS => mediamosa_rest_call::ACCESS_FOR_EXTERNAL,
    mediamosa_rest_call::BEHAVE_AS_EXTERNAL => TRUE,
  );

  $rest_calls['mediafile/upload'][mediamosa_rest_call::METHOD_PUT] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_asset_mediafile_upload_app',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_mediafile_upload',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_2_0,
    mediamosa_rest_call::ACCESS => mediamosa_rest_call::ACCESS_FOR_EXTERNAL,
    mediamosa_rest_call::BEHAVE_AS_EXTERNAL => TRUE,
  );

  $rest_calls['mediafile/$mediafile_id/upload'][mediamosa_rest_call::METHOD_PUT] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_asset_mediafile_upload_app',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_mediafile_upload',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_2_0,
  );

  // Download file.
  $rest_calls['download/$ticket_id/$filename'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_download_mediafile',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_mediafile_download',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_2_0_0,
    mediamosa_rest_call::ACCESS => mediamosa_rest_call::ACCESS_FOR_EXTERNAL,
    mediamosa_rest_call::RESPONSE_TYPE => mediamosa_rest_call::RESPONSE_TYPE_DOWNLOAD,
    mediamosa_rest_call::BEHAVE_AS_EXTERNAL => TRUE,
  );

  // Allowed on POST as well.
  $rest_calls['download/$ticket_id/$filename'][mediamosa_rest_call::METHOD_POST] = $rest_calls['download/$ticket_id/$filename'][mediamosa_rest_call::METHOD_GET];

  // Still.
  $rest_calls['still/$ticket_id'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_download_mediafile_still',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_mediafile_still_download',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_2_0_0,
    mediamosa_rest_call::ACCESS => mediamosa_rest_call::ACCESS_FOR_EXTERNAL,
    mediamosa_rest_call::RESPONSE_TYPE => mediamosa_rest_call::RESPONSE_TYPE_DOWNLOAD,
    mediamosa_rest_call::BEHAVE_AS_EXTERNAL => TRUE,
  );

  // Allowed on POST as well.
  $rest_calls['still/$ticket_id'][mediamosa_rest_call::METHOD_POST] = $rest_calls['still/$ticket_id'][mediamosa_rest_call::METHOD_GET];

  // Upload progress.
  $rest_calls['mediafile/uploadprogress'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_asset_mediafile_uploadprogress',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_mediafile_upload',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_3_0,
    mediamosa_rest_call::ACCESS => mediamosa_rest_call::ACCESS_FOR_EXTERNAL,
    mediamosa_rest_call::RESPONSE_TYPE => mediamosa_rest_call::RESPONSE_TYPE_PLAIN,
  );

  return $rest_calls;
}

/**
 * Implements hook_mediamosa_register_rest_call_doc().
 */
function mediamosa_asset_mediamosa_register_rest_call_doc() {
  $rest_calls = array();

  // Asset search.
  $rest_calls['asset'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::TITLE => 'Search for assets based on input parameters and return a list of found assets.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => array(
      '/asset?limit=200&order_by=created&order_direction=desc&title[]=test [GET]',
      '/asset?limit=2&offset=3 [GET]',
    ),
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '<items>
  <item id="1">
    <asset_id>10061</asset_id>
    <app_id>1</app_id>
    <provider_id></provider_id>
    <owner_id>av-user-naa</owner_id>
    <group_id>beeldengeluid</group_id>
    <videotimestamp>2004-09-10 22:22:08</videotimestamp>
    <videotimestampmodified>2004-09-10 22:22:08</videotimestampmodified>
    <play_restriction_start></play_restriction_start>
    <play_restriction_end></play_restriction_end>
    <locked>FALSE</locked>
    <reference_id></reference_id>
    <isprivate>FALSE</isprivate>
    <is_protected>FALSE</is_protected>
    <dublin_core>
      <type>Video</type>
      <language>EN</language>
      <title>kurkentrekker.mpg</title>
      <creator>naa</creator>
      <publisher>naa</publisher>
     <description>this kurkentrekker.mpg of naa was n/naa/mpeg/kurkentrekker.mpg</description>
      <date>2004-09-10 22:22:08</date>
      <format></format>
      <subject></subject>
      <contributor></contributor>
      <identifier></identifier>
      <source></source>
      <relation></relation>
      <coverage_temporal></coverage_temporal>
      <coverage_spatial></coverage_spatial>
      <rights></rights>
    </dublin_core>
    <qualified_dublin_core>
      <title_alternative></title_alternative>
      <description_abstract></description_abstract>
      <created></created>
      <issued></issued>
      <hasformat></hasformat>
      <isformatof></isformatof>
      <format_medium></format_medium>
      <format_extent></format_extent>
      <license></license>
      <rightsholder></rightsholder>
      <isreferencedby></isreferencedby>
    </qualified_dublin_core>
  </item>
  <item id="2">
    <asset_id>10062</asset_id>
    <app_id>1</app_id>
    <provider_id></provider_id>
    <owner_id>av-user-naa</owner_id>
    <group_id>beeldengeluid</group_id>
    <videotimestamp>2004-09-10 22:22:08</videotimestamp>
    <videotimestampmodified></videotimestampmodified>
    <play_restriction_start></play_restriction_start>
    <play_restriction_end></play_restriction_end>
    <locked>FALSE</locked>
    <reference_id></reference_id>
    <isprivate>FALSE</isprivate>
    <is_protected>FALSE</is_protected>
    <created>2008-04-07 09:53:44</created>
    <changed>2008-04-17 23:44:44</changed>
    <dublin_core>
      <type>Video</type>
      <language>EN</language>
      <title>interculturele-mpeg1-vhs.mpg</title>
      <creator>naa</creator>
      <publisher>naa</publisher>
     <description>this interculturele-mpeg1-vhs.mpg of naa was n/naa/mpeg/interculturele-mpeg1-vhs.mpg</description>
      <date>2004-09-10 22:22:08</date>
      <format></format>
      <subject></subject>
      <contributor></contributor>
      <identifier></identifier>
      <source></source>
      <relation></relation>
      <coverage_temporal></coverage_temporal>
      <coverage_spatial></coverage_spatial>
      <rights></rights>
    </dublin_core>
    <qualified_dublin_core>
      <title_alternative></title_alternative>
      <description_abstract></description_abstract>
      <created></created>
      <issued></issued>
      <hasformat></hasformat>
      <isformatof></isformatof>
      <format_medium></format_medium>
      <format_extent></format_extent>
      <license></license>
      <rightsholder></rightsholder>
      <isreferencedby></isreferencedby>
    </qualified_dublin_core>
  </item>
</items>',
  );

  // Collection asset search.
  $rest_calls['collection/$coll_id/asset'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::TITLE => 'Search for assets based on input parameters and return a list of found assets.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Change owner ship/group on asset/mediafile/collections.
  $rest_calls['change_ownership'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::TITLE => 'Change the ownership, app and/or group of assets, mediafiles and collections.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Count number of asset based on owner/app/group.
  $rest_calls['asset/count'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::TITLE => 'Return the number of asset based on app_id, owner_id and group_id.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Get Asset Media Metadata.
  $rest_calls['metadata_tag'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::TITLE => 'Retrieve the listing of the asset metadata definitions.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Create Asset Media Metadata.
  $rest_calls['metadata_tag/create'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::TITLE => 'Create a asset metadata definition.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Delete Asset Media Metadata.
  $rest_calls['metadata_tag/delete'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::TITLE => 'Delete a asset metadata definition.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Count number of mediafiles based on owner/app/group.
  $rest_calls['mediafile/count'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::TITLE => 'Return the number of mediafile based on app_id, owner_id and group_id.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Count number of mediafiles based on owner/app/group.
  $rest_calls['mediafile/$mediafile_id'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::TITLE => 'Return information about a mediafile.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Delete from mediafile.
  $rest_calls['mediafile/$mediafile_id/delete'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::TITLE => 'Delete a mediafile.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Get the stills from mediafile.
  $rest_calls['mediafile/$mediafile_id/still'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::TITLE => 'Recieve the still information of a mediafile.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Delete stills from asset.
  $rest_calls['asset/$asset_id/still/delete'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::TITLE => 'Delete stills from an asset.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Set default stills from asset.
  $rest_calls['asset/$asset_id/still/default'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::TITLE => 'Set the default still for an asset.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

    // Set order still from asset.
  $rest_calls['asset/$asset_id/still/order'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::TITLE => 'Set the order for still of a asset.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Get mediafiles of asset.
  $rest_calls['asset/$asset_id/mediafile'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::TITLE => 'Get mediafiles of asset.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Create mediafile.
  $rest_calls['asset/$asset_id/mediafile/create'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::TITLE => 'Create a mediafile, internal use only.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Create mediafile.
  $rest_calls['mediafile/create'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::TITLE => 'Create a mediafile.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Update mediafile.
  $rest_calls['asset/$asset_id/mediafile/create'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::TITLE => 'Create a mediafile.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Update mediafile.
  $rest_calls['mediafile/$mediafile_id'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::TITLE => 'Update a mediafile.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Update mediafile.
  $rest_calls['mediafile/$mediafile_id/update'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::TITLE => 'Update a mediafile.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Create ticket for upload.
  $rest_calls['mediafile/$mediafile_id/uploadticket/create'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::TITLE => 'Create a ticket for upload.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Create ticket for upload.
  $rest_calls['mediafile/$mediafile_id/upload_ticket'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::TITLE => 'Create a ticket for upload.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Create ticket for upload.
  $rest_calls['mediafile/$mediafile_id/uploadticket/create'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::TITLE => 'Create a ticket for upload.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Create ticket for upload.
  $rest_calls['mediafile/$mediafile_id/upload_ticket'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::TITLE => 'Create a ticket for upload.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Get favorites count of asset.
  $rest_calls['asset/$asset_id/favorites/count'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::TITLE => 'Count the number of favorites of an asset.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Get favorites count of asset.
  $rest_calls['asset/$asset_id/count_favorites'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::TITLE => 'Count the number of favorites of an asset.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Delete asset.
  $rest_calls['asset/$asset_id/delete'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::TITLE => 'Delete a asset.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Get the asset.
  $rest_calls['asset/$asset_id'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::TITLE => 'Retrieve a asset.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Create the asset.
  $rest_calls['asset/create'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::TITLE => 'Create a asset.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Update the asset.
  $rest_calls['asset/$asset_id'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::TITLE => 'Update the fields of a asset.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Delete the asset.
  $rest_calls['asset/$asset_id/delete'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::TITLE => 'Delete a asset.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Delete all given asset.
  $rest_calls['asset/delete'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::TITLE => 'Delete all assets using the given asset IDs.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Create link between asset and collection.
  $rest_calls['collection/$coll_id/asset_relation'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::TITLE => 'Adds one or more assets to a collection.',
    mediamosa_rest_call::DESCRIPTION => 'Adds one of more assets to a collection. A asset can belong to more than one collection at the same time. The asset_id parameter supports an array of asset id\'s. The response returns a result record (result_id, result) per asset_id given. Possible errors are "707 MM - the asset is already present in the collection" or "700 MM - asset_id=x1AjaVsefW8gVjZjsKmQRWsF9uM was not found in the database"',
    mediamosa_rest_call::EXAMPLE_REQUEST => '/collection/b1Tb9eoIgOeSLZ9cGO04rPej/asset_relation [POST] asset_id[]=X2OJSIuWKPUZUsdSNlsE8Tcx&asset_id[]=x1AjaVW8gVjZjsKmQRWsF9uM&user_id=foo',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '<items>
    <item id="1">
      <coll_id>b1Tb9eoIgOeSLZ9cGO04rPej</coll_id>
      <asset_id>X2OJSIuWKPUZUsdSNlsE8Tcx</asset_id>
      <result>success</result>
      <result_id>601</result_id>
      <result_description></result_description>
    </item>
    <item id="2">
      <coll_id>b1Tb9eoIgOeSLZ9cGO04rPej</coll_id>
      <asset_id>x1AjaVW8gVjZjsKmQRWsF9uM</asset_id>
      <result>success</result>
      <result_id>601</result_id>
      <result_description></result_description>
    </item>
  </items>
',
  );

  // Delete all links for asset on all collections.
  $rest_calls['asset/$asset_id/collection_relation/delete'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::TITLE => 'Create link between asset and collection.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Count number of collections of one asset.
  $rest_calls['asset/$asset_id/collection/count'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::TITLE => 'Count the number of collections where given asset is related to.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Count number of collections of one asset.
  $rest_calls['asset/$asset_id/collections/count'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::TITLE => 'Count the number of collections where given asset is related to.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Count number of collections of one asset.
  $rest_calls['asset/$asset_id/count_collections'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::TITLE => 'Count the number of collections where given asset is related to.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Count per prop_id per content.
  $rest_calls['tagcount'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::TITLE => 'Return a list of tags of one property and their count, a count more than 1 means multiple occourance of the same tag value.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Count per prop_id per content.
  $rest_calls['asset/$asset_id/metadata'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::TITLE => 'Create metadata for the asset.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Get the asset supplement.
  $rest_calls['asset/$asset_id/supplement'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::TITLE => 'Get the supplement of the asset.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Create the asset supplement.
  $rest_calls['asset/$asset_id/supplement/create'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::TITLE => 'Create the supplement of the asset.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Update the asset supplement.
  $rest_calls['asset/$asset_id/supplement/$supplement_id/update'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::TITLE => 'Update the supplement of the asset.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Update the asset supplement.
  $rest_calls['supplement/$supplement_id/update'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::TITLE => 'Update the supplement of the asset.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Update the asset supplement.
  $rest_calls['supplement/update'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::TITLE => 'Update the supplement of the asset.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Delete the asset supplement.
  $rest_calls['asset/$asset_id/supplement/$supplement_id/delete'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::TITLE => 'Delete a supplement of the asset.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Delete the asset supplement.
  $rest_calls['supplement/$supplement_id/update'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::TITLE => 'Delete a supplement of the asset.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Delete the asset supplement.
  $rest_calls['supplement/delete'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::TITLE => 'Delete a supplement of the asset.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Play a mediafile.
  $rest_calls['asset/$asset_id/play'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::TITLE => 'Play a mediafile.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Play a mediafile.
  $rest_calls['video/$asset_id/play'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::TITLE => 'Play a mediafile.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // @TODO!
  $rest_calls['mediafile/upload'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_asset_mediafile_upload',
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_asset_mediafile_upload',
    mediamosa_rest_call::BEHAVE_AS_EXTERNAL => TRUE,
  );

  $rest_calls['mediafile/upload'][mediamosa_rest_call::METHOD_PUT] = array(
    mediamosa_rest_call::TITLE => 'Upload a mediafile.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  $rest_calls['mediafile/$mediafile_id/upload'][mediamosa_rest_call::METHOD_PUT] = array(
    mediamosa_rest_call::TITLE => 'Upload a mediafile.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Download file.
  $rest_calls['download/$ticket_id/$filename'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::TITLE => 'Enables downloading of mediafiles using the ticket system.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Allowed on POST as well.
  $rest_calls['download/$ticket_id/$filename'][mediamosa_rest_call::METHOD_POST] = $rest_calls['download/$ticket_id/$filename'][mediamosa_rest_call::METHOD_GET];

  // Still.
  $rest_calls['still/$ticket_id'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::TITLE => 'Enables viewing of stills using the ticket system.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  // Allowed on POST as well.
  $rest_calls['still/$ticket_id'][mediamosa_rest_call::METHOD_POST] = $rest_calls['still/$ticket_id'][mediamosa_rest_call::METHOD_GET];

  // Upload progress.
  $rest_calls['mediafile/uploadprogress'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::TITLE => 'Allows to retrieve the upload progress of an upload using APC extension.',
    mediamosa_rest_call::DESCRIPTION => '',
    mediamosa_rest_call::EXAMPLE_REQUEST => '',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '',
  );

  return $rest_calls;
}
