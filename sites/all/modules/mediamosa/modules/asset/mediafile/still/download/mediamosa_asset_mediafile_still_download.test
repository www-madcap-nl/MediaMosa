<?php
// $Id$

/**
 * MediaMosa is Open Source Software to build a Full Featured, Webservice
 * Oriented Media Management and Distribution platform (http://mediamosa.org)
 *
 * Copyright (C) 2010 SURFnet BV (http://www.surfnet.nl) and Kennisnet
 * (http://www.kennisnet.nl)
 *
 * MediaMosa is based on the open source Drupal platform and
 * was originally developed by Madcap BV (http://www.madcap.nl)
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, you can find it at:
 * http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
 */

/**
 * @file
 * Mediamosa Storage / SAN/NAS unittests.
 *
 * Based on tickets mediamosa 1:
 *
 * ticket_616
 */

/**
  * @file
  * Unittests for Conf. storage module.
  */
class MediaMosaAssetMediafileStillDownloadTestCase extends MediaMosaTestCaseEgaJob {

  public static function getInfo() {
    return array(
      'name' => 'Still - Download test',
      'description' => 'Test downloading of stills with tickets.',
      'group' => MEDIAMOSA_TEST_GROUP_MEDIAMOSA_CORE_STILL,
    );
  }

  function testStillDownload() {

    // App ids.
    $app_id_1 = $this->a_app[mediamosa_app_db::APP_ID];

    $upload = $this->uploadTestFile($this->getTestVideo_ogg());
    $asset_id = $upload['asset_id'];
    $mediafile_id = $upload['mediafile_id'];

    // Create still.
    $parameters = array(
      'still_type' => 'NONE',
    );

    // Create still job (ticket vpcore #199).
    $job_id = $this->createMediafileStill($mediafile_id, $parameters);

    // Parse the queue.
    $this->doQueueCycleAll();

    // Get the asset, so we have the still.
    $asset = $this->getAsset($asset_id);

    $still_servers = mediamosa_server::get_enabled_still();
    $this->assertTrue(!empty($still_servers), t('@num enabled still server(s) found.', array('@num' => $still_servers->rowCount())));

    foreach ($still_servers as $still_server) {
      $url = str_replace('{TICKET}', $mediafile_id, $still_server[mediamosa_server_db::SERVER_URI]);

      // Test the output, do output call.
      $url = str_replace('/still/', '/simpletest/still/', $url);

      // Get the file.
      $result = mediamosa_http::drupal_http_request($url);

      // Check response.
      $this->assertTrue(
        $result->code == 200,
        t("Download the test image from '@url' (code = @code)", array('@url' => $url, '@code' => $result->code))
      );
    }
  }
}
