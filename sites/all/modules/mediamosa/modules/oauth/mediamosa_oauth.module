<?php
// $Id$

/**
 * MediaMosa is Open Source Software to build a Full Featured, Webservice
 * Oriented Media Management and Distribution platform (http://mediamosa.org)
 *
 * Copyright (C) 2011 SURFnet BV (http://www.surfnet.nl) and Kennisnet
 * (http://www.kennisnet.nl)
 *
 * MediaMosa is based on the open source Drupal platform and
 * was originally developed by Madcap BV (http://www.madcap.nl)
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, you can find it at:
 * http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
 */

/**
 * sites/all/modules/mediamosa/lib/oauth/OAuth.php:
 *
 * The MIT License
 *
 * Copyright (c) 2007 Andy Smith
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * @file
 * The oAuth module.
 */

/**
 * Implements hook_mediamosa_register_rest_call_doc().
 */
function mediamosa_oauth_mediamosa_register_rest_call_doc() {
  $rest_calls = array();

  // oAuth.

  $rest_calls['services/oauth/request_token'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::TITLE => 'oAuth request token.',
    mediamosa_rest_call::DESCRIPTION => 'The Consumer obtains an unauthorized Request Token.',
    mediamosa_rest_call::EXAMPLE_REQUEST => 'services/oauth/request_token?oauth_consumer_key=key&oauth_nonce=631253d79fc6ecd42f9f30f7badee7ce&oauth_signature=71EqRGJuDHBjQDoCL2V9Y798BwU%3D&oauth_signature_method=HMAC-SHA1&oauth_timestamp=1296481425&oauth_version=1.0',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => 'oauth_token=requestkey&oauth_token_secret=requestsecret',
  );

  $rest_calls['services/oauth/access_token'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::TITLE => 'oAuth access token.',
    mediamosa_rest_call::DESCRIPTION => 'The Consumer exchanges the Request Token for an Access Token.',
    mediamosa_rest_call::EXAMPLE_REQUEST => 'services/oauth/access_token?oauth_consumer_key=key&oauth_nonce=22eb39fb5bc9ce96caeaa84320675522&oauth_signature=sjMuLMcBKHCUMo56Im7qJ4Yr%2BGo%3D&oauth_signature_method=HMAC-SHA1&oauth_timestamp=1296482023&oauth_token=requestkey&oauth_version=1.0',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => 'oauth_token=accesskey&oauth_token_secret=accesssecret',
  );

  return $rest_calls;
}

/**
 * Implements hook_mediamosa_register_rest_call().
 */
function mediamosa_oauth_mediamosa_register_rest_call() {
  $rest_calls = array();

  // oAuth.

  $rest_calls['services/oauth/request_token'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_oauth_request_token',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_oauth',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_2_4_0,
    mediamosa_rest_call::RESPONSE_TYPE => mediamosa_rest_call::RESPONSE_TYPE_PLAIN,
  );

  $rest_calls['services/oauth/access_token'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_oauth_access_token',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_oauth',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_2_4_0,
    mediamosa_rest_call::RESPONSE_TYPE => mediamosa_rest_call::RESPONSE_TYPE_PLAIN,
  );

  return $rest_calls;
}
