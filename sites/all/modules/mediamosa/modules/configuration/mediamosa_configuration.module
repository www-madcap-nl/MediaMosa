<?php
// $Id$

/**
 * MediaMosa is a Full Featured, Webservice Oriented Media Management and
 * Distribution platform (http://www.vpcore.nl)
 *
 * Copyright (C) 2009 SURFnet BV (http://www.surfnet.nl) and Kennisnet
 * (http://www.kennisnet.nl)
 *
 * MediaMosa is based on the open source Drupal platform and
 * was originally developed by Madcap BV (http://www.madcap.nl)
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, you can find it at:
 * http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
 */

 /**
  * @file
  * The maintenance module.
  */
require_once('mediamosa_configuration.inc');

/**
 * Implements hook_permission()
 */
function mediamosa_configuration_permission() {
  return array(
    'administer mediamosa configuration' => array(
      'title' => t('MediaMosa configuration administer permissions'),
      'description' => t('Manage the configuration of MediaMosa to be edited.')
    )
  );
}

/**
 * Implement hook_menu().
 */
function mediamosa_configuration_menu() {
  $items = array();

  // Configuration.
  /*
  $items['admin/mediamosa'] = array(
    'title' => 'MediaMosa',
    'description' => 'MediaMosa Configuration.',
   // 'position' => 'left',
   // 'weight' => 10,
    'page callback' => 'mediamosa_configuration_menu_block_page',
    'access arguments' => array('administer mediamosa configuration'),
    //'file' => '/modules/system/system.admin.inc',
  );
/*
  $items['admin/mediamosa/configuration'] = array(
    'title' => 'Configuration',
    'description' => 'The configuration of MediaMosa settings. You might have to enable maintenance modules for more options.',
   // 'page callback' => 'drupal_get_form',
   // 'page arguments' => array('mediamosa_configuration'),
    'access arguments' => array('administer mediamosa configuration'),
  );
*/
  $items['admin/mediamosa/configuration/settings'] = array(
    'title' => 'Configuration',
    'description' => 'The configuration of MediaMosa settings. You might have to enable maintenance modules for more options.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mediamosa_configuration'),
    'access arguments' => array('administer mediamosa configuration'),
  );

  $items['admin/mediamosa/configuration/transcode_profile'] = array(
    'title' => 'Transcode profiles',
    'description' => 'Transcoding profiles are used by the transcoding software. When a user transcodes a mediafile, the given profile parameters are used to convert the file. These profiles are available to all applications, and only 1 of them is the default.',
    'page callback' => 'mediamosa_configuration_transcode_profile_list',
    'access arguments' => array('administer mediamosa configuration'),
  );

  $items['admin/mediamosa/configuration/transcode_profile/%'] = array(
    'type' => MENU_CALLBACK,
    'title' => 'Transcode profile details',
    'page callback' => 'mediamosa_configuration_transcode_profile_view',
    'page arguments' => array(1),
    'access arguments' => array('administer mediamosa configuration'),
  );

  $items['admin/mediamosa/configuration/webservice'] = array(
    'title' => 'Webservice management',
    'description' => 'List of all webservices and global availibity of services.',
    'page callback' => 'mediamosa_configuration_webservice',
    'access arguments' => array('administer mediamosa configuration'),
  );

  $items['admin/mediamosa/configuration/app'] = array(
    'title' => 'Client applications',
    'description' => 'List all MediaMosa end-user-applications..',
    'page callback' => 'mediamosa_configuration_app_list',
    'access arguments' => array('administer mediamosa configuration'),
  );

  $items['admin/mediamosa/configuration/app/%/contacts'] = array(
    'title' => 'Client application contacts',
    'type' => MENU_CALLBACK,
    'page callback' => 'mediamosa_configuration_app_contacts',
    'page arguments' => array(1),
    'access arguments' => array('administer mediamosa configuration'),
  );
/*
  $items['admin/mediamosa/reports'] = array(
    'title' => 'Reports',
    'description' => 'View logs and other reports.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mediamosa_configuration'),
    'access arguments' => array('administer mediamosa configuration'),
  );

  $items['admin/mediamosa/reports/watchdog'] = array(
    'title' => 'Log entries',
    'description' => 'List of the 50 most recent log entries.',
    'page callback' => 'mediamosa_configuration_watchdog',
    'access arguments' => array('administer mediamosa configuration'),
  );
*/
  return $items;
}

/**
 * Block code copied from drupal system.inc.
 *
 * @return
 *   The output HTML.
 */
function mediamosa_configuration_menu_block_page() {
  $item = menu_get_item();
  $content = system_admin_menu_block($item);

  if ($content) {
    $output = theme('admin_block_content', $content);
  }
  else {
    $output = t('You do not have any administrative items.');
  }

  return $output;
}

/**
 * Our Maintenance settings form.
 *
 * @return array
 */
function mediamosa_configuration() {

  // Build the settings form and enrich it with our settings collect hook.
  return system_settings_form(module_invoke_all('mediamosa_configuration_collect'), FALSE);
}

/**
 * Implements hook_submit.
 *
 * @param array $form
 * @param array $form_state
 */
function mediamosa_configuration_submit($form, $form_state) {
exit('gaa');
  // Now call our submit hooks.
  module_invoke_all('mediamosa_configuration_submit', $form, $form_state);
}
