<?php
// $Id$

/**
 * MediaMosa is a Full Featured, Webservice Oriented Media Management and
 * Distribution platform (http://www.vpcore.nl)
 *
 * Copyright (C) 2009 SURFnet BV (http://www.surfnet.nl) and Kennisnet
 * (http://www.kennisnet.nl)
 *
 * MediaMosa is based on the open source Drupal platform and
 * was originally developed by Madcap BV (http://www.madcap.nl)
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, you can find it at:
 * http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
 */

/**
 * @file
 * SAN NAS module.
 */

/**
 * Implementation of hook_menu()
 */
function mediamosa_maintenance_san_nas_menu() {
  $items = array();

  $items['vpx/san_nas'] = array(
    'title' => t('VPX SAN / NAS'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mediamosa_maintenance_san_nas_form'),
    'access arguments' => array('view sannas'),
  );

  return $items;
}


/**
 * Implementation of hook_permissions()
 */
function mediamosa_maintenance_san_nas_permissions() {
  return array('view mediamosa sannas', 'administer mediamosa sannas');
}


/**
 * Implementation of hook_form()
 */
function mediamosa_maintenance_san_nas_form($node, $form_state) {
  assert($node);
  assert($form_state);

  $form = array();

  $a_san_nas = db_query(
    'SELECT current_mount_point, current_mount_point_windows FROM {san_nas_settings} LIMIT 1'
  )->fetchArray();

  $form['general'] = array(
    '#type' => 'fieldset',
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
    '#title' => t('VPX SAN/NAS mount points'),
    '#description' => t('Mount points on SAN/NAS.')
  );

  $form['general']['current_mount_point'] = array(
    '#type' => 'textfield',
    '#title' => t('Linux mount point'),
    '#description' => t('Current Linux mount point.'),
    '#required' => TRUE,
    '#default_value' => $a_san_nas['current_mount_point'],
  );

  $form['general']['current_mount_point_windows'] = array(
    '#type' => 'textfield',
    '#title' => t('Windows mount point'),
    '#description' => t('Current Windows mount point (use UNC path).'),
    '#required' => TRUE,
    '#default_value' => $a_san_nas['current_mount_point_windows'],
  );

  $form['submit'] = array('#type' => 'submit', '#value' => t('Save'));

  return $form;
}

/**
 * Implementation of hook_view()
 */
function mediamosa_maintenance_san_nas_view() {
  $content = t("VPX SAN / NAS");
  return $content;
}

/**
 * Implementation of hook_submit()
 */
function mediamosa_maintenance_san_nas_form_submit(&$form_state, $form) {
  assert($form_state);

  if (!user_access('administer sannas')) {
    drupal_set_message('You have no "administer mediamosa sannas" rights.', 'error');
    drupal_goto($_SERVER['HTTP_REFERER']);// hhmmmmm ?
  }

  if ($form['values']['submit'] == t('Save')) {
    db_query(
      'UPDATE {san_nas_settings} SET current_mount_point = :current_mount_point, current_mount_point_windows = :current_mount_point_windows',
      array(
        ':current_mount_point' => $form['values']['current_mount_point'],
        ':current_mount_point_windows' => $form['values']['current_mount_point_windows'],
      )
    );
  }

  drupal_set_message(t("Mount points saved."));
}
