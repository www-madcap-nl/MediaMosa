<?php
// $Id$

/**
 * MediaMosa is Open Source Software to build a Full Featured, Webservice Oriented Media Management and
 * Distribution platform (http://mediamosa.org)
 *
 * Copyright (C) 2009 SURFnet BV (http://www.surfnet.nl) and Kennisnet
 * (http://www.kennisnet.nl)
 *
 * MediaMosa is based on the open source Drupal platform and
 * was originally developed by Madcap BV (http://www.madcap.nl)
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, you can find it at:
 * http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
 */

 /**
  * @file
  * Main core installer.
  */

// Node types.
require_once 'core/node/mediamosa_node.inc';

// Include the class we need. During install nothing can be autoloaded (yet).
require_once 'mediamosa.inc';
require_once 'lib/mediamosa_db.inc';
require_once 'core/error/mediamosa_error.install.inc';
require_once 'core/app/mediamosa_app.install.inc';
require_once 'core/aut/mediamosa_aut.install.inc';
require_once 'core/app/mediamosa_app.install.inc';
require_once 'core/asset/mediamosa_asset.install.inc';
require_once 'core/collection/mediamosa_collection.install.inc';
require_once 'core/ftp_batch/mediamosa_ftp_batch.install.inc';
require_once 'core/job/mediamosa_job.install.inc';
require_once 'core/server/mediamosa_server.install.inc';
require_once 'core/ticket/mediamosa_ticket.install.inc';
require_once 'core/transcode/mediamosa_transcode.install.inc';
require_once 'core/user/mediamosa_user.install.inc';
require_once 'core/webservice/mediamosa_webservice.install.inc';

/**
 * Implement hook_install().
 */
function mediamosa_install() {

   // Install the error db.
  _mediamosa_error_install();

  // Install the app db.
  _mediamosa_app_install();

  // Install webservice db.
  _mediamosa_webservice_install();

  // Install the collection db.
  _mediamosa_collection_install();

  // Install the asset db.
  _mediamosa_asset_install();

  // Install the aut dbs.
  _mediamosa_aut_install();

  // Install the user dbs.
  _mediamosa_user_install();

  // Call installer ticket.
  _mediamosa_ticket_install();

  // Call installer ftp_batch.
  _mediamosa_ftp_batch_install();

  // Call installer Transcode.
  _mediamosa_transcode_install();

  // Call installer Job.
  _mediamosa_job_install(); // jobs before server.

  // Install the server db.
  _mediamosa_server_install();
}

/**
 * Implement hook_unstall().
 */
function mediamosa_uninstall() {
  // Remove the server db.
  _mediamosa_server_uninstall();

  // Remove Job.
  _mediamosa_job_uninstall();

  // Remove Transcode Profile.
  _mediamosa_transcode_uninstall();

  // Remove ftp_batch.
  _mediamosa_ftp_batch_uninstall();

  // Call uninstaller ticket.
  _mediamosa_ticket_uninstall();

  // Uninstall the user dbs.
  _mediamosa_user_uninstall();

  // Install the aut dbs.
  _mediamosa_aut_uninstall();

  // Remove the app db.
  _mediamosa_asset_uninstall();

  // Remove the collection db.
  _mediamosa_collection_uninstall();

  // Remove the webservice db.
  _mediamosa_webservice_uninstall();

  // Remove the app db.
  _mediamosa_app_uninstall();

  // Remove the error db.
  _mediamosa_error_uninstall();
}

/**
 * Fix the non-null default value on aut_name table.
 */
function mediamosa_update_7000() {
  $ret = array();
  db_change_field($ret, mediamosa_aut_name_db::TABLE_NAME, mediamosa_aut_name_db::AUT_PREFIX, mediamosa_aut_name_db::AUT_PREFIX, array('type' => 'varchar', 'length' => mediamosa_aut_name_db::AUT_PREFIX_LENGTH, 'not null' => FALSE, 'default' => NULL, 'description' => t('The optional prefix of the entity, only used with REALM type.')));
  return $ret;
}
