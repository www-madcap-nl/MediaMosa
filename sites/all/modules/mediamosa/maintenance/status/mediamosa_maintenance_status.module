<?php
// $Id$

/**
 * MediaMosa is Open Source Software to build a Full Featured, Webservice
 * Oriented Media Management and Distribution platform (http://mediamosa.org)
 *
 * Copyright (C) 2009 SURFnet BV (http://www.surfnet.nl) and Kennisnet
 * (http://www.kennisnet.nl)
 *
 * MediaMosa is based on the open source Drupal platform and
 * was originally developed by Madcap BV (http://www.madcap.nl)
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, you can find it at:
 * http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
 */

 /**
  * @file
  * De status module.
  * */

/**
 * Trigger status page.
 */
function mediamosa_maintenance_status_cron() {

  $start = time();
  mediamosa_debug::log_debug('mediamosa_maintenance_status_cron started.', array(), 'maintenance_status');

  // Trigger unittest run.
  mediamosa_maintenance_status::trigger_maintenance_status();

  // Log it.
  mediamosa_debug::log_debug('mediamosa_maintenance_status_cron ended: @secs', array('@sec' => time() - $start), 'maintenance_status');
}

function mediamosa_maintenance_status_mediamosa_register_rest_call_doc() {
  $a_rest_calls = array();

  $a_rest_calls['status'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::TITLE => 'Retrieve the CRON status',
    mediamosa_rest_call::DESCRIPTION => 'Retrieve the status of the CRON status run.',
    mediamosa_rest_call::EXAMPLE_REQUEST => 'status',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '<items>
  <item id="1">
    <test>Challenge-reponse authentication</test>
    <test_description>Challenge-reponse authentication for end user applications.</test_description>
    <passes>35</passes>
    <fails>0</fails>
    <exceptions>0</exceptions>
    <last_run>2010-04-08 13:11:25</last_run>
    <ttr>35.18</ttr>
  </item>
</items>',
  );

  return $a_rest_calls;
}

/**
 * Implements hook_mediamosa_register_rest_call().
 */
function mediamosa_maintenance_status_mediamosa_register_rest_call() {

  $a_rest_calls = array();

  $a_rest_calls['cron/maintenance_status'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_maintenance_status',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::DESCRIPTION => 'Execute the current default unit tests.',
    mediamosa_rest_call::MODULE_NAME => 'mediamosa',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_2_0_0,
    mediamosa_rest_call::ACCESS => mediamosa_rest_call::ACCESS_INTERNAL_ONLY,
  );

  $a_rest_calls['status'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_status',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
    mediamosa_rest_call::ACCESS => mediamosa_rest_call::ACCESS_FOR_EXTERNAL,
    mediamosa_rest_call::BEHAVE_AS_EXTERNAL => TRUE,
  );


  return $a_rest_calls;
}
