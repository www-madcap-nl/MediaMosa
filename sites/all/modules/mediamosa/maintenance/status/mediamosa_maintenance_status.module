<?php
// $Id$

/**
 * MediaMosa is Open Source Software to build a Full Featured, Webservice
 * Oriented Media Management and Distribution platform (http://mediamosa.org)
 *
 * Copyright (C) 2010 SURFnet BV (http://www.surfnet.nl) and Kennisnet
 * (http://www.kennisnet.nl)
 *
 * MediaMosa is based on the open source Drupal platform and
 * was originally developed by Madcap BV (http://www.madcap.nl)
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, you can find it at:
 * http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
 */

 /**
  * @file
  * De status module.
  * */

/**
 * Trigger status page.
 */
function mediamosa_maintenance_status_cron() {

  $start = time();
  mediamosa_debug::log('mediamosa_maintenance_status_cron started.', array(), 'maintenance_status');

  // Trigger unittest run.
  mediamosa_maintenance_status::trigger_maintenance_status();

  // Log it.
  mediamosa_debug::log('mediamosa_maintenance_status_cron ended: @secs', array('@sec' => time() - $start), 'maintenance_status');
}

function mediamosa_maintenance_status_mediamosa_register_rest_call_doc() {
  $a_rest_calls = array();

  $a_rest_calls['status'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::TITLE => 'Retrieve the CRON status',
    mediamosa_rest_call::DESCRIPTION => 'Retrieve the status of the CRON status run.',
    mediamosa_rest_call::EXAMPLE_REQUEST => 'status',
    mediamosa_rest_call::RESPONSE_FIELDS => array(),
    mediamosa_rest_call::EXAMPLE_RESPONSE => '<items>
  <item id="1">
    <test>Challenge-reponse authentication</test>
    <test_description>Challenge-reponse authentication for end user applications.</test_description>
    <passes>35</passes>
    <fails>0</fails>
    <exceptions>0</exceptions>
    <last_run>2010-04-08 13:11:25</last_run>
    <ttr>35.18</ttr>
  </item>
</items>',
  );

  return $a_rest_calls;
}

/**
 * Implements hook_mediamosa_register_rest_call().
 */
function mediamosa_maintenance_status_mediamosa_register_rest_call() {

  $a_rest_calls = array();

  $a_rest_calls['cron/maintenance_status'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_maintenance_status',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::DESCRIPTION => 'Execute the current default unit tests.',
    mediamosa_rest_call::MODULE_NAME => 'mediamosa',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_2_0_0,
    mediamosa_rest_call::ACCESS => mediamosa_rest_call::ACCESS_INTERNAL_ONLY,
  );

  $a_rest_calls['status'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_status',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_1_1_0,
    mediamosa_rest_call::ACCESS => mediamosa_rest_call::ACCESS_FOR_EXTERNAL,
    mediamosa_rest_call::BEHAVE_AS_EXTERNAL => TRUE,
  );

  $a_rest_calls['status/run'][mediamosa_rest_call::METHOD_POST] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_status_run',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::DESCRIPTION => 'Execute the given unit test and return its result.',
    mediamosa_rest_call::MODULE_NAME => 'mediamosa',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_2_1_1,
    mediamosa_rest_call::ACCESS => mediamosa_rest_call::ACCESS_INTERNAL_ONLY,
  );

  // @FIXME: remove me!
  $a_rest_calls['status/run'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_status_run',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::DESCRIPTION => 'Execute the given unit test and return its result.',
    mediamosa_rest_call::MODULE_NAME => 'mediamosa',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_2_1_1,
  );

  return $a_rest_calls;
}

/**
 * Implements the hook_mediamosa_configuration_collect()
 */
function mediamosa_maintenance_status_mediamosa_configuration_collect() {
  $form['settings_status'] = array(
    '#type' => 'fieldset',
    '#title' => t('Status page'),
    '#description' => t('The status page show vital information about your MediaMosa installation.'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );

  $form['settings_status']['mediamosa_status_timeout_tests'] = array(
    '#type' => 'textfield',
    '#title' => t('Timeout test run'),
    '#description' => t('The amount of seconds a new run for a test will wait before a test can be run again; if a test is taking longer than given value in seconds, then the test is considered failed and the next test will be started. Default is 180 seconds. Increase if your server is slow.'),
    '#required' => TRUE,
    '#default_value' => mediamosa_maintenance_status::timeout_test_run(),
  );

  $form['settings_status']['mediamosa_status_minutes_tests_fast'] = array(
    '#type' => 'textfield',
    '#title' => t('Timeout test run - halve hour'),
    '#description' => t('The interval in minutes the fast tests are run, default @interval minutes. 0 = Off.', array('@interval' => mediamosa_settings::MEDIAMOSA_RUN_INTERVAL_FAST)),
    '#required' => TRUE,
    '#default_value' => mediamosa_settings::MEDIAMOSA_RUN_INTERVAL_FAST,
  );

  $form['settings_status']['mediamosa_status_minutes_tests_normal'] = array(
    '#type' => 'textfield',
    '#title' => t('Timeout test run - 3 hours'),
    '#description' => t('The interval in minutes the normal tests are run, default @interval minutes. 0 = Off.', array('@interval' => mediamosa_settings::MEDIAMOSA_RUN_INTERVAL_NORMAL)),
    '#required' => TRUE,
    '#default_value' => mediamosa_settings::MEDIAMOSA_RUN_INTERVAL_NORMAL,
  );

  $form['settings_status']['mediamosa_status_minutes_tests_slow'] = array(
    '#type' => 'textfield',
    '#title' => t('Timeout test run - daily'),
    '#description' => t('The interval in minutes the slow (daily) tests are run, default @interval minutes. 0 = Off.', array('@interval' => mediamosa_settings::MEDIAMOSA_RUN_INTERVAL_SLOW)),
    '#required' => TRUE,
    '#default_value' => mediamosa_settings::MEDIAMOSA_RUN_INTERVAL_SLOW,
  );

  $form['settings_status']['mediamosa_status_run_tests'] = array(
    '#type' => 'checkbox',
    '#title' => t('Run tests master switch'),
    '#description' => t('Enable or disable running of tests on the background.'),
    '#default_value' => TRUE,
  );

  return $form;
}
