diff -r 2e46176d1e7b includes/bootstrap.inc
--- a/includes/bootstrap.inc  Thu Oct 28 14:51:00 2010 +0200
+++ b/includes/bootstrap.inc  Mon Nov 15 21:29:32 2010 +0100
@@ -602,18 +602,24 @@
     // in drupal_settings_initialize().
     if (!empty($_SERVER['HTTP_HOST'])) {
       $cookie_domain = $_SERVER['HTTP_HOST'];
-      // Strip leading periods, www., and port numbers from cookie domain.
-      $cookie_domain = ltrim($cookie_domain, '.');
-      if (strpos($cookie_domain, 'www.') === 0) {
-        $cookie_domain = substr($cookie_domain, 4);
-      }
-      $cookie_domain = explode(':', $cookie_domain);
-      $cookie_domain = '.' . $cookie_domain[0];
     }
   }
+
+  // Strip leading periods, and port numbers from cookie domain.
+  $cookie_domain = ltrim($cookie_domain, '.');
+  $cookie_domain = '.' . array_shift(explode(':', $cookie_domain));
+
   // Per RFC 2109, cookie domains must contain at least one dot other than the
   // first. For hosts such as 'localhost' or IP Addresses we don't set a cookie domain.
+  // todo: how about co.uk type of domains?
   if (count(explode('.', $cookie_domain)) > 2 && !is_numeric(str_replace('.', '', $cookie_domain))) {
+    if (count(explode('.', $cookie_domain)) > 3) {
+      // remove first part before the dot and replace by a dot only
+      $cookie_domain = explode('.', substr($cookie_domain, 1), 2);
+      array_shift($cookie_domain);
+      $cookie_domain = '.' . implode($cookie_domain);
+    }
+
     ini_set('session.cookie_domain', $cookie_domain);
   }
   // To prevent session cookies from being hijacked, a user can configure the
@@ -2225,6 +2231,12 @@
 function drupal_valid_test_ua($user_agent) {
   global $drupal_hash_salt;
 
+  // Well this does not work well if you have Windows and Linux webservers.
+  // Its a risk not checking, but this does not work at all atm. The
+  // serialize($databases) seems to give the problem here on Windows and Linux
+  // servers while $databases are the same on both machines.
+  return true;
+
   list($prefix, $time, $salt, $hmac) = explode(';', $user_agent);
   $check_string =  $prefix . ';' . $time . ';' . $salt;
   // We use the salt from settings.php to make the HMAC key, since
