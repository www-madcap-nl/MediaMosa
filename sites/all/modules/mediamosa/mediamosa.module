<?php
// $Id$

/**
 * MediaMosa is a Full Featured, Webservice Oriented Media Management and
 * Distribution platform (http://www.vpcore.nl)
 *
 * Copyright (C) 2009 SURFnet BV (http://www.surfnet.nl) and Kennisnet
 * (http://www.kennisnet.nl)
 *
 * MediaMosa is based on the open source Drupal platform and
 * was originally developed by Madcap BV (http://www.madcap.nl)
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, you can find it at:
 * http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
 */

 /**
  * @file
  * Core - Open source media management and distribution platform.
  */
define('MEDIAMOSA_MENU_PATH', '');// was mediamosa for menu hook.

// Default settings.
require_once 'mediamosa.settings.inc';

// Node types hook include.
require_once 'core/node/mediamosa_node.inc';

/**
 * Implement hook_requirements().
 */
function mediamosa_requirements($phase) {
  // Ensure translations don't break at install time
  $t = get_t();

  $a_requirements = array();

  if ($phase == 'runtime') {
    // We require PHP 5 or higher
    if (version_compare(phpversion(), mediamosa_settings::MINIMUM_PHP_VERSION) < 0) {
      $a_requirements['php'] = array(
        'title' => $t('PHP'),
        'value' => phpversion(),
        'description' => $t('Your PHP installation does not meet the requirements for using the MediaMosa module. MediaMosa requires at least PHP %version.', array('%version' => mediamosa_settings::MINIMUM_PHP_VERSION)),
        'severity' => REQUIREMENT_ERROR
      );
    }

    // Make sure the mediamosa_server_id is set and not to long.
    $mediamosa_installation_id = mediamosa::variable_get('mediamosa_installation_id');

    if (!isset($mediamosa_installation_id) || drupal_strlen($mediamosa_installation_id) == 0 || drupal_strlen($mediamosa_installation_id) > mediamosa_job_server_db::INSTALL_ID_LENGTH) {
      $a_requirements['mediamosa'] = array(
        'title' => $t("Mediamosa installation ID ('mediamosa_installation_id')"),
        'value' => isset($mediamosa_installation_id) ? $mediamosa_installation_id : 'Not defined',
        'description' => $t("The configuration setting in settings.php 'mediamosa_installation_id' is either not set or is too long, make sure its set and not longer than %length characters.", array('%length' => mediamosa_job_server_db::INSTALL_ID_LENGTH)),
        'severity' => REQUIREMENT_ERROR
      );
    }
  }

  return $a_requirements;
}

/**
 * Implement hook_menu().
 */

function mediamosa_menu() {
  $items = array();
/*
  $items[MEDIAMOSA_MENU_PATH] = array(
    'type' => MENU_CALLBACK,
    'page callback' => '_mediamosa',
    'access arguments' => array(mediamosa_settings::MEDIAMOSA_PERM_REST_ACCESS),
  );
*/
  // Menu items that are basically just menu blocks.
  $items['admin/mediamosa'] = array(
    'title' => 'MediaMosa 2',
    'description' => 'Configurate and view MediaMosa settings and pages.',
    'position' => 'left',
    'weight' => -20,
    'page callback' => 'mediamosa_main_admin_page',
    'access arguments' => array(mediamosa_settings::MEDIAMOSA_PERM_ADMINISTRATION_ACCESS),
    'file' => 'mediamosa.admin.inc',
  );
/*
  $items['admin/structure'] = array(
    'title' => 'Structure',
    'description' => 'Control how your site looks and feels.',
    'position' => 'right',
    'weight' => -8,
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('access administration pages'),
    'file' => 'system.admin.inc',
  );
  */

  return $items;
}

/**
 * Implement hook_permission().
 * (future expansion when drupal users are used instead of apps).
 */
function mediamosa_permission() {
  return array(
    mediamosa_settings::MEDIAMOSA_PERM_REST_ACCESS =>  array(
      'title' => t('Access rest calls'),
      'description' => t('Users with this permission may access the MediaMosa restcalls.'),
    ),
  );
}


function mediamosa_init() {
  // Create and get the core object.
  $o_mediamosa = mediamosa::get();

  // Now call the rest process function to process possible rest call.
  $o_mediamosa->process_rest();
}

/**
 * The MediaMosa REST menu callback.
 */
function _mediamosa() {
  // Create and get the core object.
  $o_mediamosa = mediamosa::get();

  // Now call the rest process function to process possible rest call.
  $o_mediamosa->process_rest();

  // If our the URL didn't match, then at this point we return MENU_NOT_FOUND for drupal.
  return MENU_NOT_FOUND;
}

/**
 * Implements hook_mediamosa_register_rest_call().
 */
function mediamosa_mediamosa_register_rest_call() {

  $a_rest_calls = array();

  $a_rest_calls['rest'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_list',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::DESCRIPTION => 'Retrieve the listing of the current registered MediaMosa REST calls.',
    mediamosa_rest_call::MODULE_NAME => 'mediamosa',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_2_0_0,
  );

  $a_rest_calls['rest/#$uri_id'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::CLASS_NAME => 'mediamosa_rest_call_get',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::DESCRIPTION => 'Retrieve specific information about an registered MediaMosa REST calls',
    mediamosa_rest_call::MODULE_NAME => 'mediamosa',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_2_0_0,
  );

  return $a_rest_calls;
}

/**
 * Implement hook_help().
 */
function mediamosa_help($path, $arg) {
  global $base_url;

  switch ($path) {
    case 'admin/mediamosa':
      return '<p>' . t('This page shows you the mediamosa home page.') . '</p>';
  }
}
