<?php
// $Id$

/**
 * MediaMosa is Open Source Software to build a Full Featured, Webservice Oriented Media Management and
 * Distribution platform (http://mediamosa.org)
 *
 * Copyright (C) 2009 SURFnet BV (http://www.surfnet.nl) and Kennisnet
 * (http://www.kennisnet.nl)
 *
 * MediaMosa is based on the open source Drupal platform and
 * was originally developed by Madcap BV (http://www.madcap.nl)
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, you can find it at:
 * http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
 */

/**
 * @file
 * This module contains the login procedure, cookie handling and basic GET
 * and POST functions to communicate with VP-X.
 */

/**
 * Implement hook_menu().
 */
function mediamosa_connector_menu() {
  $items = array();

  $items['admin/mediamosa/config/connector'] = array(
    'title' => t('MediaMosa Connector'),
    'description' => t('The MediaMosa connector enables other modules to connect on the MediaMosa REST interface. The configuration needs username, password and URL to connect to MediaMosa 2. You need to create or have a MediaMosa application login.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mediamosa_connector_settings'),
    'access arguments' => array('administer mediamosa connector settings'),
  );

  $items['admin/mediamosa/config/connector/list'] = array(
    'title' => t('MediaMosa Connector'),
    'access arguments' => array('administer mediamosa connector settings'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  return $items;
}

/**
 * Implement hook_permission().
 */
function mediamosa_connector_permission() {

  return array(
    'administer mediamosa connector configuration' => array(
      'title' => t('MediaMosa connector configuration administer permissions'),
      'description' => t('Manage the configuration of MediaMosa 2 connector to be edited.')
    ),
  );
}

/**
 * Implement hook_block().
 */
function mediamosa_connector_block($op = 'list', $delta = 0, $edit = array()) {

  switch ($op) {
    case 'list':
      $blocks[0] = array(
        'info' => t('MediaMosa 2 Connector debug info'),
      );

      return $blocks;

    case 'view':
      switch ($delta) {
        case 0:
          if ($_SERVER['REQUEST_METHOD'] !== 'POST' && isset($_SESSION['mediamosa_connector_debug_info'])) {
            $block['subject'] = t('MediaMosa 2 Connector request info');
            $header = array(t('Method'), t('URL'), t('Response time (sec)'));
            $rows = array();
            foreach ($_SESSION['mediamosa_connector_debug_info'] as $log) {
              $rows[] = array(
                $log['method'],
                $log['uri'],
                $log['response_time']
              );
            }
            $block['content'] = 'REST calls issued to build this page.';
            $block['content'] .= theme('table', $header, $rows);
            unset($_SESSION['mediamosa_connector_debug_info']);
          }
          break;
      }
      return $block;
  }
}

/**
 * Implement hook_settings().
 */
function mediamosa_connector_settings() {

  $form = array();

  $form['connection'] = array(
    '#type' => 'fieldset',
    '#title' => t('Connection settings to MediaMosa 2 REST interface'),
    '#collapsible' => TRUE,
    '#weight' => -5,
  );
  $form['connection']['mediamosa_connector_url'] = array(
    '#type' => 'textfield',
    '#title' => t('URL'),
    '#description' => t('Enter the URL of the interface you want to connect to.'),
    '#required' => TRUE,
    '#default_value' => '',
  );
  $form['connection']['mediamosa_connector_username'] = array(
    '#type' => 'textfield',
    '#title' => t('Username'),
    '#description' => t('Enter the MediaMosa 2 user name that needs to connect.'),
    '#required' => TRUE,
    '#default_value' => '',
  );
  $form['connection']['mediamosa_connector_password'] = array(
    '#type' => 'textfield',
    '#title' => t('Password'),
    '#description' => t('Password might be required to login.'),
    '#required' => FALSE,
    '#default_value' => '',
  );

  if (variable_get('mediamosa_connector_url', '') != '' && variable_get('mediamosa_connector_username', '') != '') {
    $form['connection']['check_connection'] = array(
      '#type' => 'submit',
      '#value' => t('Check connection'),
      '#submit' => array('mediamosa_connector_check_connection_submit'),
      '#weight' => 1,
    );
  }

  $form['other'] = array(
    '#type' => 'fieldset',
    '#title' => t('Other settings'),
    '#collapsible' => TRUE,
    '#weight' => 0,

  );
  $form['other']['mediamosa_connector_debug'] = array(
    '#type' => 'checkbox',
    '#title' => t('Verbose MediaMosa request information'),
    '#description' => t('Enable to view debug request information. This information is show in a drupal block. You must enable this block to view the debug contents.'),
    '#default_value' => FALSE,
  );

  $form['#submit'] = array('mediamosa_connector_settings_submit');
  $form = system_settings_form($form);

 // $form['buttons']['submit'] = array($form['buttons']['submit'], array('#type' => 'submit', '#value' => t('Check connection') ));
  return $form;
}

function mediamosa_connector_check_connection_submit() {
  // Create the mediamosa connector.
  $o_connector = new mediamosa_connector();

  // Do request will trigger login.
  $response = $o_connector->request_internal('rest');

  if ($response !== FALSE) {
    drupal_set_message(t('Internal call test successful.'));

    // Do request will trigger login.
    $response = $o_connector->request('rest');
    if ($response !== FALSE) {
      drupal_set_message(t('Normal call test successful.'));
    }
    else {
      drupal_set_message(t('Login test sucess.'));
    }
  }
  else {
    drupal_set_message(t('Login test failed, please check your input.'), 'error');
  }
}

/**
 * MediaMosa connector handler
 */
function mediamosa_connector_settings_submit(&$form_state , $form) {

  // Remove so we re-login.
  variable_del('mediamosa_connector_cookie');
}
